name: End-to-end tests CI

on:
  push:

jobs:
  e2e_tests:
    environment: Testing_Environment
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      RDS_SSL_CERT_PATH: ${{ secrets.RDS_SSL_CERT_PATH }}
      PEM_CONTENT: ${{ secrets.PEM_CONTENT }}
    strategy:
        matrix:
          os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
        - name: Checkout repository
          uses: actions/checkout@v4
  
        - name: Setup Java
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: '17'
  
        - name: Grant execute permission for gradlew
          run: chmod +x ./backend/gradlew
        
        - name: Create Pem File
          run: |
            mkdir .env
            cd .env
            echo "${{ env.PEM_CONTENT }}" >> "${{ env.RDS_SSL_CERT_PATH }}"
            ls
            cd ../
        
        - name: Setup application.properties
          run: |
            APPLICATION_PROPERTIES='./backend/src/main/resources/application.properties'
            mkdir -p $(dirname $APPLICATION_PROPERTIES)
            echo "spring.datasource.url=$DB_URL" >> $APPLICATION_PROPERTIES
            echo "spring.datasource.username=$DB_USERNAME" >> $APPLICATION_PROPERTIES
            echo "spring.datasource.password=$DB_PASSWORD" >> $APPLICATION_PROPERTIES
            echo 'spring.datasource.driver-class-name=org.postgresql.Driver
            spring.jpa.hibernate.ddl-auto=create-drop
            spring.jpa.show-sql=false
            spring.jpa.properties.hibernate.format_sql=true
            spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
            spring.datasource.hikari.data-source-properties.useSSL=true
            spring.datasource.hikari.data-source-properties.requireSSL=true
            spring.datasource.hikari.maximum-pool-size=10
            spring.datasource.hikari.minimum-idle=5
            spring.datasource.hikari.idle-timeout=30000
            spring.datasource.hikari.connection-timeout=20000
            spring.datasource.hikari.max-lifetime=1800000' >> $APPLICATION_PROPERTIES

        - name: Print application.properties
          run: cat ./backend/src/main/resources/application.properties
        
        - name: Run backend
          run: |
            cd backend
            ./gradlew bootRun 

        - name: hacky wait for server to start
          run: sleep 20

        - name: Is backend running
          run: curl -I 'http://localhost:8080/api/v1/demo-controller'
        
        # - name: Cache Node modules
        #   id: cache-json
        #   uses: actions/cache@v4
        #   with:
        #     path: ~/.npm
        #     key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
        #     restore-keys: |
        #       ${{ runner.os }}-node-

        # - name: Install Node.js
        #   if: steps.cache-json.outputs.cache-hit != 'true'
        #   uses: actions/setup-node@v4
        #   with:
        #     node-version: 18

        # - name: Install dependencies
        #   run: |
        #     cd frontend
        #     npm ci

        # - name: Verify Cypress installation
        #   run: |
        #     cd frontend
        #     npx cypress verify

        # - name: Build project
        #   run: |
        #     cd frontend
        #     npm run devReact &

        # - name: Cypress run
        #   run: |
        #     cd frontend
        #     npm run e2e:chrome
        

        
        

    
